version: '{build}'
environment:
  JAVA_HOME: C:\Program Files\Java\jdk11
  matrix: # execution per-module so that PITest doesn't timeout the build
      # mandatory modules first
      - MODULE: robozonky-api
      - MODULE: robozonky-common
      - MODULE: robozonky-notifications
      - MODULE: robozonky-app
      - MODULE: robozonky-cli
      - MODULE: robozonky-installer
      # then plugin modules
      - MODULE: robozonky-strategy-natural
      - MODULE: robozonky-integration-zonkoid
      - MODULE: robozonky-integration-stonky
matrix:
  fast_finish: true
branches:
  except:
    - gh-pages
cache:
  - C:\Users\appveyor\.m2\ -> pom.xml
install:
  - ps: |
      Add-Type -AssemblyName System.IO.Compression.FileSystem
      if (!(Test-Path -Path "C:\maven" )) {
        (new-object System.Net.WebClient).DownloadFile(
          'https://www.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.zip',
          'C:\maven-bin.zip'
        )
        [System.IO.Compression.ZipFile]::ExtractToDirectory("C:\maven-bin.zip", "C:\maven")
      }
  - cmd: SET PATH=C:\maven\apache-maven-3.5.4\bin;%JAVA_HOME%\bin;%PATH%
  - cmd: SET JAVA_OPTS=-Xmx2g
  - cmd: SET MAVEN_OPTS=%JAVA_OPTS%
  - cmd: mvn --version
  - cmd: java -version
build_script: # no tests, just build
  - mvn --batch-mode -pl %MODULE% -am install -DskipTests -Denforcer.skip -Dgpg.skip
test_script: # all tests, no assembly
  - mvn --batch-mode -pl %MODULE% install -Dassembly.skipAssembly -Denforcer.skip -Dgpg.skip
on_finish:
# upload test results via rest-api; order by name, numbers numerically
- ps: |
    $wc = New-Object 'System.Net.WebClient'
    Get-ChildItem . -Name -Recurse 'TEST-*.xml' |
    Sort-Object -Property {$_.Name -as [int]} |
    Foreach-Object {
        $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $_))
    }
# upload test artifacts in order and with a shortened file name; order by name, numbers numerically
- ps: |
    Get-ChildItem . -Name -Recurse '*-output.txt' |
    Sort-Object -Property {$_.Name -as [int]} |
    Foreach-Object {
        Push-AppveyorArtifact (Resolve-Path $_) -DeploymentName "Test Logs"
    }
