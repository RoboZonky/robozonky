{
  "revapi": {
    "java": {
      "filter": {
        "packages": {
          "regex": true,
          "exclude": [
            "com\\.github\\.robozonky\\.internal(\\..+)?"
          ]
        }
      }
    },
    "ignore": [
      {
        "code": "java.method.parameterTypeChanged",
        "old": "parameter com.github.robozonky.api.remote.entities.ZonkyApiToken com.github.robozonky.api.remote.ZonkyOAuthApi::login(java.lang.String, java.lang.String, java.lang.String, ===java.lang.String===)",
        "new": "parameter com.github.robozonky.api.remote.entities.ZonkyApiToken com.github.robozonky.api.remote.ZonkyOAuthApi::login(java.lang.String, java.lang.String, java.lang.String, ===com.github.robozonky.api.remote.enums.OAuthScope===)",
        "justification": "OAuth Token Scope is an Enum now."
      },
      {
        "code": "java.annotation.removed",
        "old": "parameter com.github.robozonky.api.remote.entities.ZonkyApiToken com.github.robozonky.api.remote.ZonkyOAuthApi::login(java.lang.String, java.lang.String, java.lang.String, ===java.lang.String===)",
        "new": "parameter com.github.robozonky.api.remote.entities.ZonkyApiToken com.github.robozonky.api.remote.ZonkyOAuthApi::login(java.lang.String, java.lang.String, java.lang.String, ===com.github.robozonky.api.remote.enums.OAuthScope===)",
        "annotation": "@javax.ws.rs.DefaultValue(\"SCOPE_APP_WEB\")",
        "justification": "OAuth Token Scope is an Enum now."
      },
      {
        "code": "java.method.parameterTypeChanged",
        "old": "parameter com.github.robozonky.api.remote.entities.ZonkyApiToken com.github.robozonky.api.remote.ZonkyOAuthApi::refresh(java.lang.String, java.lang.String, ===java.lang.String===)",
        "new": "parameter com.github.robozonky.api.remote.entities.ZonkyApiToken com.github.robozonky.api.remote.ZonkyOAuthApi::refresh(java.lang.String, java.lang.String, ===com.github.robozonky.api.remote.enums.OAuthScope===)",
        "justification": "OAuth Token Scope is an Enum now."
      },
      {
        "code": "java.annotation.removed",
        "old": "parameter com.github.robozonky.api.remote.entities.ZonkyApiToken com.github.robozonky.api.remote.ZonkyOAuthApi::refresh(java.lang.String, java.lang.String, ===java.lang.String===)",
        "new": "parameter com.github.robozonky.api.remote.entities.ZonkyApiToken com.github.robozonky.api.remote.ZonkyOAuthApi::refresh(java.lang.String, java.lang.String, ===com.github.robozonky.api.remote.enums.OAuthScope===)",
        "annotation": "@javax.ws.rs.DefaultValue(\"SCOPE_APP_WEB\")",
        "justification": "OAuth Token Scope is an Enum now."
      },
      {
        "code": "java.field.removedWithConstant",
        "old": "field com.github.robozonky.api.remote.entities.ZonkyApiToken.SCOPE_APP_WEB_STRING",
        "justification": "OAuth Token Scope is an Enum now."
      },
      {
        "code": "java.field.removedWithConstant",
        "old": "field com.github.robozonky.api.remote.entities.ZonkyApiToken.SCOPE_FILE_DOWNLOAD_STRING",
        "justification": "OAuth Token Scope is an Enum now."
      },
      {
        "code": "java.method.numberOfParametersChanged",
        "old": "method void com.github.robozonky.api.remote.entities.ZonkyApiToken::<init>(java.lang.String, java.lang.String, int, java.lang.String)",
        "new": "method void com.github.robozonky.api.remote.entities.ZonkyApiToken::<init>(java.lang.String, java.lang.String, int, java.time.OffsetDateTime, java.lang.String, com.github.robozonky.api.remote.enums.OAuthScope[])",
        "justification": "OAuth Token Scope is an Enum now."
      },
      {
        "code": "java.method.numberOfParametersChanged",
        "old": "method void com.github.robozonky.api.remote.entities.ZonkyApiToken::<init>(java.lang.String, java.lang.String, int, java.time.OffsetDateTime, java.lang.String, java.lang.String)",
        "new": "method void com.github.robozonky.api.remote.entities.ZonkyApiToken::<init>(java.lang.String, java.lang.String, java.time.OffsetDateTime)",
        "justification": "OAuth Token Scope is an Enum now."
      },
      {
        "code": "java.method.numberOfParametersChanged",
        "old": "method void com.github.robozonky.api.remote.entities.ZonkyApiToken::<init>(java.lang.String, java.lang.String, java.time.OffsetDateTime)",
        "new": "method void com.github.robozonky.api.remote.entities.ZonkyApiToken::<init>(java.lang.String, java.lang.String, int, com.github.robozonky.api.remote.enums.OAuthScope)",
        "justification": "OAuth Token Scope is an Enum now."
      },
      {
        "code": "java.method.returnTypeChanged",
        "old": "method java.lang.String com.github.robozonky.api.remote.entities.ZonkyApiToken::getScope()",
        "new": "method com.github.robozonky.api.remote.enums.OAuthScopes com.github.robozonky.api.remote.entities.ZonkyApiToken::getScope()",
        "justification": "OAuth Token Scope is an Enum now."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.BankAccount",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.BlockedAmount",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.BorrowerRelatedInvestmentInfo",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.CurrentOverview",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.DateDescriptor",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.ExpectedPayment",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.Instalment",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.InsurancePolicyPeriod",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.MonthlySuperInvestorOverview",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.MyInvestment",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.OtherInvestments",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.OverallOverview",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.OverallPortfolio",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.Participation",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.Photo",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.PurchaseRequest",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.RawDevelopment",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.RawInvestment",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.RawLoan",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.Restrictions",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.RiskPortfolio",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.SellRequest",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.Statistics",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.SuperInvestorOverview",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.Transaction",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.Wallet",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.ZonkyApiToken",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.class.externalClassExposedInAPI",
        "new": "class org.apache.logging.log4j.Level",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.class.externalClassExposedInAPI",
        "new": "interface org.apache.logging.log4j.Logger",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.class.externalClassExposedInAPI",
        "new": "interface org.apache.logging.log4j.Marker",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.class.externalClassExposedInAPI",
        "new": "interface org.apache.logging.log4j.message.Message",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.class.externalClassExposedInAPI",
        "new": "interface org.apache.logging.log4j.message.MessageFactory",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.class.externalClassExposedInAPI",
        "new": "interface org.apache.logging.log4j.util.MessageSupplier",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.class.externalClassExposedInAPI",
        "new": "interface org.apache.logging.log4j.util.Supplier<T extends java.lang.Object>",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.class.externalClassExposedInAPI",
        "new": "enum org.apache.logging.log4j.spi.StandardLevel",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.field.removed",
        "old": "field com.github.robozonky.api.remote.entities.BaseEntity.LOGGER @ com.github.robozonky.api.remote.entities.LastPublishedLoan",
        "justification": "Logging goes through Log4J instead of SLF4J."
      },
      {
        "code": "java.method.addedToInterface",
        "new": "method java.math.BigDecimal com.github.robozonky.api.remote.entities.sanitized.MarketplaceLoan::getAnnuity()",
        "justification": "Zonky API brings new fields."
      },
      {
        "code": "java.method.addedToInterface",
        "new": "method java.math.BigDecimal com.github.robozonky.api.remote.entities.sanitized.MarketplaceLoan::getRevenueRate()",
        "justification": "Zonky API brings new fields."
      },
      {
        "code": "java.method.addedToInterface",
        "new": "method T com.github.robozonky.api.remote.entities.sanitized.MutableMarketplaceLoan<T extends com.github.robozonky.api.remote.entities.sanitized.MutableMarketplaceLoan<T extends com.github.robozonky.api.remote.entities.sanitized.MutableMarketplaceLoan<T>>>::setAnnuity(java.math.BigDecimal)",
        "justification": "Zonky API brings new fields."
      },
      {
        "code": "java.method.addedToInterface",
        "new": "method T com.github.robozonky.api.remote.entities.sanitized.MutableMarketplaceLoan<T extends com.github.robozonky.api.remote.entities.sanitized.MutableMarketplaceLoan<T extends com.github.robozonky.api.remote.entities.sanitized.MutableMarketplaceLoan<T>>>::setRevenueRate(java.math.BigDecimal)",
        "justification": "Zonky API brings new fields."
      },
      {
        "code": "java.method.addedToInterface",
        "new": "method java.math.BigDecimal com.github.robozonky.api.remote.entities.sanitized.Investment::getRevenueRate()",
        "justification": "Zonky API brings new fields."
      },
      {
        "code": "java.method.addedToInterface",
        "new": "method T com.github.robozonky.api.remote.entities.sanitized.MutableInvestment<T extends com.github.robozonky.api.remote.entities.sanitized.MutableInvestment<T extends com.github.robozonky.api.remote.entities.sanitized.MutableInvestment<T>>>::setRevenueRate(java.math.BigDecimal)",
        "justification": "Zonky API brings new fields."
      },
      {
        "code": "java.method.addedToInterface",
        "new": "method com.github.robozonky.api.remote.entities.LastPublishedLoan com.github.robozonky.api.remote.LoanApi::lastPublished()",
        "justification": "We're using a new Zonky API."
      },
      {
        "code": "java.method.addedToInterface",
        "new": "method java.util.Optional<com.github.robozonky.api.strategies.ReservationStrategy> com.github.robozonky.api.strategies.StrategyService::forReservations(java.lang.String)",
        "justification": "Introducing the reservation system."
      },
      {
        "code": "java.method.addedToInterface",
        "new": "method void com.github.robozonky.api.remote.ControlApi::accept(com.github.robozonky.api.remote.entities.Resolutions)",
        "justification": "Introducing the reservation system."
      },
      {
        "code": "java.method.addedToInterface",
        "new": "method void com.github.robozonky.api.remote.ControlApi::setReservationPreferences(com.github.robozonky.api.remote.entities.ReservationPreferences)",
        "justification": "Introducing the reservation system."
      }
    ]
  }
}
