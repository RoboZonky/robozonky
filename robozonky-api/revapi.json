{
  "revapi": {
    "java": {
      "filter": {
        "packages": {
          "regex": true,
          "exclude": [
            "com\\.github\\.robozonky\\.internal(\\..+)?"
          ]
        }
      }
    },
    "ignore": [
      {
        "code": "java.method.returnTypeChanged",
        "old": "method java.time.OffsetDateTime com.github.robozonky.api.notifications.Event::getConceivedOn()",
        "new": "method java.time.ZonedDateTime com.github.robozonky.api.notifications.Event::getConceivedOn()",
        "justification": "Switched internal representation of date and time to ZonedDateTime."
      },
      {
        "code": "java.method.returnTypeChanged",
        "old": "method java.time.OffsetDateTime com.github.robozonky.api.notifications.Event::getCreatedOn()",
        "new": "method java.time.ZonedDateTime com.github.robozonky.api.notifications.Event::getCreatedOn()",
        "justification": "Switched internal representation of date and time to ZonedDateTime."
      },
      {
        "code": "java.method.returnTypeChanged",
        "old": "method java.time.OffsetDateTime com.github.robozonky.api.notifications.RoboZonkyDaemonResumedEvent::getUnavailableSince()",
        "new": "method java.time.ZonedDateTime com.github.robozonky.api.notifications.RoboZonkyDaemonResumedEvent::getUnavailableSince()",
        "justification": "Switched internal representation of date and time to ZonedDateTime."
      },
      {
        "code": "java.method.returnTypeChanged",
        "old": "method java.time.OffsetDateTime com.github.robozonky.api.notifications.RoboZonkyDaemonResumedEvent::getUnavailableUntil()",
        "new": "method java.time.ZonedDateTime com.github.robozonky.api.notifications.RoboZonkyDaemonResumedEvent::getUnavailableUntil()",
        "justification": "Switched internal representation of date and time to ZonedDateTime."
      },
      {
        "code": "java.method.returnTypeChanged",
        "old": "method java.time.OffsetDateTime com.github.robozonky.api.remote.entities.ZonkyApiToken::getExpiresOn()",
        "new": "method java.time.ZonedDateTime com.github.robozonky.api.remote.entities.ZonkyApiToken::getExpiresOn()",
        "justification": "Switched internal representation of date and time to ZonedDateTime."
      },
      {
        "code": "java.method.removed",
        "old": "method java.time.LocalDate com.github.robozonky.api.notifications.DelinquencyBased::getDelinquentSince()",
        "justification": "The information is now available on Investment directly."
      },
      {
        "code": "java.method.addedToInterface",
        "new": "method int com.github.robozonky.api.remote.entities.InvestmentLoanData::getDpd()",
        "justification": "Now required for some optimizations."
      },
      {
        "code": "java.method.addedToInterface",
        "new": "method boolean com.github.robozonky.api.remote.entities.InvestmentLoanData::hasCollectionHistory()",
        "justification": "Now required for some optimizations."
      },
      {
        "code": "java.method.removed",
        "old": "method java.util.Collection<com.github.robozonky.api.remote.entities.Loan> com.github.robozonky.api.notifications.ExecutionCompletedEvent::getLoansInvestedInto()",
        "justification": "No longer provide result collections in events."
      },
      {
        "code": "java.method.removed",
        "old": "method java.util.Collection<com.github.robozonky.api.remote.entities.Participation> com.github.robozonky.api.notifications.PurchasingCompletedEvent::getParticipationsPurchased()",
        "justification": "No longer provide result collections in events."
      },
      {
        "code": "java.method.removed",
        "old": "method java.util.Collection<com.github.robozonky.api.remote.entities.Reservation> com.github.robozonky.api.notifications.ReservationCheckCompletedEvent::getReservationsAccepted()",
        "justification": "No longer provide result collections in events."
      },
      {
        "code": "java.method.removed",
        "old": "method java.util.Collection<com.github.robozonky.api.remote.entities.Investment> com.github.robozonky.api.notifications.SellingCompletedEvent::getInvestments()",
        "justification": "No longer provide result collections in events."
      },
      {
        "code": "java.class.removed",
        "old": "interface com.github.robozonky.api.notifications.LoanRecommendedEvent",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.removed",
        "old": "interface com.github.robozonky.api.notifications.PurchaseRecommendedEvent",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.removed",
        "old": "interface com.github.robozonky.api.notifications.ReservationAcceptationRecommendedEvent",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.removed",
        "old": "interface com.github.robozonky.api.notifications.SaleRecommendedEvent",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.removed",
        "old": "method java.util.Optional<T> com.github.robozonky.api.strategies.Descriptor<T extends com.github.robozonky.api.strategies.Recommended<T extends com.github.robozonky.api.strategies.Recommended<T, S extends com.github.robozonky.api.strategies.Descriptor<T, S, X extends java.lang.Object>, X>, S, X>, S extends com.github.robozonky.api.strategies.Descriptor<T extends com.github.robozonky.api.strategies.Recommended<T, S extends com.github.robozonky.api.strategies.Descriptor<T, S, X extends java.lang.Object>, X>, S, X>, X>::recommend(com.github.robozonky.api.Money)",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.generics.formalTypeParameterRemoved",
        "old": "interface com.github.robozonky.api.strategies.Descriptor<T extends com.github.robozonky.api.strategies.Recommended<T, S extends com.github.robozonky.api.strategies.Descriptor<T, S, X extends java.lang.Object>, X>, S, X>",
        "new": "interface com.github.robozonky.api.strategies.Descriptor<X extends java.lang.Object>",
        "typeParameter": "S extends com.github.robozonky.api.strategies.Descriptor<T extends com.github.robozonky.api.strategies.Recommended<T, S extends com.github.robozonky.api.strategies.Descriptor<T, S, X extends java.lang.Object>, X>, S, X>",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.generics.formalTypeParameterRemoved",
        "old": "interface com.github.robozonky.api.strategies.Descriptor<T extends com.github.robozonky.api.strategies.Recommended<T, S extends com.github.robozonky.api.strategies.Descriptor<T, S, X extends java.lang.Object>, X>, S, X>",
        "new": "interface com.github.robozonky.api.strategies.Descriptor<X extends java.lang.Object>",
        "typeParameter": "X",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.generics.formalTypeParameterChanged",
        "old": "interface com.github.robozonky.api.strategies.Descriptor<T extends com.github.robozonky.api.strategies.Recommended<T, S extends com.github.robozonky.api.strategies.Descriptor<T, S, X extends java.lang.Object>, X>, S, X>",
        "new": "interface com.github.robozonky.api.strategies.Descriptor<X extends java.lang.Object>",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.removed",
        "old": "method java.util.Optional<com.github.robozonky.api.strategies.RecommendedInvestment> com.github.robozonky.api.strategies.InvestmentDescriptor::recommend()",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.removed",
        "old": "method java.util.Optional<com.github.robozonky.api.strategies.RecommendedInvestment> com.github.robozonky.api.strategies.InvestmentDescriptor::recommend(com.github.robozonky.api.Money)",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.noLongerImplementsInterface",
        "old": "class com.github.robozonky.api.strategies.InvestmentDescriptor",
        "new": "class com.github.robozonky.api.strategies.InvestmentDescriptor",
        "interface": "com.github.robozonky.api.strategies.Descriptor<com.github.robozonky.api.strategies.RecommendedInvestment, com.github.robozonky.api.strategies.InvestmentDescriptor, com.github.robozonky.api.remote.entities.Investment>",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.superTypeTypeParametersChanged",
        "old": "class com.github.robozonky.api.strategies.InvestmentDescriptor",
        "new": "class com.github.robozonky.api.strategies.InvestmentDescriptor",
        "oldSuperType": "com.github.robozonky.api.strategies.Descriptor<com.github.robozonky.api.strategies.RecommendedInvestment, com.github.robozonky.api.strategies.InvestmentDescriptor, com.github.robozonky.api.remote.entities.Investment>",
        "newSuperType": "com.github.robozonky.api.strategies.Descriptor<com.github.robozonky.api.remote.entities.Investment>",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.parameterTypeChanged",
        "old": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedLoan> com.github.robozonky.api.strategies.InvestmentStrategy::recommend(===java.util.Collection<com.github.robozonky.api.strategies.LoanDescriptor>===, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "parameter java.util.stream.Stream<com.github.robozonky.internal.util.functional.Tuple2<com.github.robozonky.api.strategies.LoanDescriptor, com.github.robozonky.api.Money>> com.github.robozonky.api.strategies.InvestmentStrategy::recommend(===java.util.stream.Stream<com.github.robozonky.api.strategies.LoanDescriptor>===, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.returnTypeTypeParametersChanged",
        "old": "method java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedLoan> com.github.robozonky.api.strategies.InvestmentStrategy::recommend(java.util.Collection<com.github.robozonky.api.strategies.LoanDescriptor>, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "method java.util.stream.Stream<com.github.robozonky.internal.util.functional.Tuple2<com.github.robozonky.api.strategies.LoanDescriptor, com.github.robozonky.api.Money>> com.github.robozonky.api.strategies.InvestmentStrategy::recommend(java.util.stream.Stream<com.github.robozonky.api.strategies.LoanDescriptor>, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.removed",
        "old": "method java.util.Optional<com.github.robozonky.api.strategies.RecommendedLoan> com.github.robozonky.api.strategies.LoanDescriptor::recommend(com.github.robozonky.api.Money)",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.noLongerImplementsInterface",
        "old": "class com.github.robozonky.api.strategies.LoanDescriptor",
        "new": "class com.github.robozonky.api.strategies.LoanDescriptor",
        "interface": "com.github.robozonky.api.strategies.Descriptor<com.github.robozonky.api.strategies.RecommendedLoan, com.github.robozonky.api.strategies.LoanDescriptor, com.github.robozonky.api.remote.entities.Loan>",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.superTypeTypeParametersChanged",
        "old": "class com.github.robozonky.api.strategies.LoanDescriptor",
        "new": "class com.github.robozonky.api.strategies.LoanDescriptor",
        "oldSuperType": "com.github.robozonky.api.strategies.Descriptor<com.github.robozonky.api.strategies.RecommendedLoan, com.github.robozonky.api.strategies.LoanDescriptor, com.github.robozonky.api.remote.entities.Loan>",
        "newSuperType": "com.github.robozonky.api.strategies.Descriptor<com.github.robozonky.api.remote.entities.Loan>",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.removed",
        "old": "method java.util.Optional<com.github.robozonky.api.strategies.RecommendedParticipation> com.github.robozonky.api.strategies.ParticipationDescriptor::recommend()",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.removed",
        "old": "method java.util.Optional<com.github.robozonky.api.strategies.RecommendedParticipation> com.github.robozonky.api.strategies.ParticipationDescriptor::recommend(com.github.robozonky.api.Money)",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.noLongerImplementsInterface",
        "old": "class com.github.robozonky.api.strategies.ParticipationDescriptor",
        "new": "class com.github.robozonky.api.strategies.ParticipationDescriptor",
        "interface": "com.github.robozonky.api.strategies.Descriptor<com.github.robozonky.api.strategies.RecommendedParticipation, com.github.robozonky.api.strategies.ParticipationDescriptor, com.github.robozonky.api.remote.entities.Participation>",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.superTypeTypeParametersChanged",
        "old": "class com.github.robozonky.api.strategies.ParticipationDescriptor",
        "new": "class com.github.robozonky.api.strategies.ParticipationDescriptor",
        "oldSuperType": "com.github.robozonky.api.strategies.Descriptor<com.github.robozonky.api.strategies.RecommendedParticipation, com.github.robozonky.api.strategies.ParticipationDescriptor, com.github.robozonky.api.remote.entities.Participation>",
        "newSuperType": "com.github.robozonky.api.strategies.Descriptor<com.github.robozonky.api.remote.entities.Participation>",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.parameterTypeChanged",
        "old": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedParticipation> com.github.robozonky.api.strategies.PurchaseStrategy::recommend(===java.util.Collection<com.github.robozonky.api.strategies.ParticipationDescriptor>===, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.ParticipationDescriptor> com.github.robozonky.api.strategies.PurchaseStrategy::recommend(===java.util.stream.Stream<com.github.robozonky.api.strategies.ParticipationDescriptor>===, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.returnTypeTypeParametersChanged",
        "old": "method java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedParticipation> com.github.robozonky.api.strategies.PurchaseStrategy::recommend(java.util.Collection<com.github.robozonky.api.strategies.ParticipationDescriptor>, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "method java.util.stream.Stream<com.github.robozonky.api.strategies.ParticipationDescriptor> com.github.robozonky.api.strategies.PurchaseStrategy::recommend(java.util.stream.Stream<com.github.robozonky.api.strategies.ParticipationDescriptor>, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.removed",
        "old": "interface com.github.robozonky.api.strategies.Recommended<T extends com.github.robozonky.api.strategies.Recommended<T, S extends com.github.robozonky.api.strategies.Descriptor<T, S, X extends java.lang.Object>, X>, S, X>",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.removed",
        "old": "class com.github.robozonky.api.strategies.RecommendedInvestment",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.removed",
        "old": "class com.github.robozonky.api.strategies.RecommendedLoan",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.removed",
        "old": "class com.github.robozonky.api.strategies.RecommendedParticipation",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.removed",
        "old": "class com.github.robozonky.api.strategies.RecommendedReservation",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.removed",
        "old": "method java.util.Optional<com.github.robozonky.api.strategies.RecommendedReservation> com.github.robozonky.api.strategies.ReservationDescriptor::recommend(com.github.robozonky.api.Money)",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.noLongerImplementsInterface",
        "old": "class com.github.robozonky.api.strategies.ReservationDescriptor",
        "new": "class com.github.robozonky.api.strategies.ReservationDescriptor",
        "interface": "com.github.robozonky.api.strategies.Descriptor<com.github.robozonky.api.strategies.RecommendedReservation, com.github.robozonky.api.strategies.ReservationDescriptor, com.github.robozonky.api.remote.entities.Reservation>",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.class.superTypeTypeParametersChanged",
        "old": "class com.github.robozonky.api.strategies.ReservationDescriptor",
        "new": "class com.github.robozonky.api.strategies.ReservationDescriptor",
        "oldSuperType": "com.github.robozonky.api.strategies.Descriptor<com.github.robozonky.api.strategies.RecommendedReservation, com.github.robozonky.api.strategies.ReservationDescriptor, com.github.robozonky.api.remote.entities.Reservation>",
        "newSuperType": "com.github.robozonky.api.strategies.Descriptor<com.github.robozonky.api.remote.entities.Reservation>",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.parameterTypeChanged",
        "old": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedReservation> com.github.robozonky.api.strategies.ReservationStrategy::recommend(===java.util.Collection<com.github.robozonky.api.strategies.ReservationDescriptor>===, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.ReservationDescriptor> com.github.robozonky.api.strategies.ReservationStrategy::recommend(===java.util.stream.Stream<com.github.robozonky.api.strategies.ReservationDescriptor>===, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.returnTypeTypeParametersChanged",
        "old": "method java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedReservation> com.github.robozonky.api.strategies.ReservationStrategy::recommend(java.util.Collection<com.github.robozonky.api.strategies.ReservationDescriptor>, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "method java.util.stream.Stream<com.github.robozonky.api.strategies.ReservationDescriptor> com.github.robozonky.api.strategies.ReservationStrategy::recommend(java.util.stream.Stream<com.github.robozonky.api.strategies.ReservationDescriptor>, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.parameterTypeChanged",
        "old": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedInvestment> com.github.robozonky.api.strategies.SellStrategy::recommend(===java.util.Collection<com.github.robozonky.api.strategies.InvestmentDescriptor>===, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.InvestmentDescriptor> com.github.robozonky.api.strategies.SellStrategy::recommend(===java.util.stream.Stream<com.github.robozonky.api.strategies.InvestmentDescriptor>===, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.returnTypeTypeParametersChanged",
        "old": "method java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedInvestment> com.github.robozonky.api.strategies.SellStrategy::recommend(java.util.Collection<com.github.robozonky.api.strategies.InvestmentDescriptor>, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "method java.util.stream.Stream<com.github.robozonky.api.strategies.InvestmentDescriptor> com.github.robozonky.api.strategies.SellStrategy::recommend(java.util.stream.Stream<com.github.robozonky.api.strategies.InvestmentDescriptor>, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "justification": "Recommendations have been removed from the public API without replacement."
      },
      {
        "code": "java.method.parameterTypeChanged",
        "old": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedLoan> com.github.robozonky.api.strategies.InvestmentStrategy::recommend(===java.util.Collection<com.github.robozonky.api.strategies.LoanDescriptor>===, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "parameter java.util.Optional<com.github.robozonky.api.Money> com.github.robozonky.api.strategies.InvestmentStrategy::recommend(===com.github.robozonky.api.strategies.LoanDescriptor===, java.util.function.Supplier<com.github.robozonky.api.strategies.PortfolioOverview>, com.github.robozonky.api.SessionInfo)",
        "justification": "Strategy interface is simplified for increased RoboZonky performance."
      },
      {
        "code": "java.method.parameterTypeChanged",
        "old": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedLoan> com.github.robozonky.api.strategies.InvestmentStrategy::recommend(java.util.Collection<com.github.robozonky.api.strategies.LoanDescriptor>, ===com.github.robozonky.api.strategies.PortfolioOverview===, com.github.robozonky.api.SessionInfo)",
        "new": "parameter java.util.Optional<com.github.robozonky.api.Money> com.github.robozonky.api.strategies.InvestmentStrategy::recommend(com.github.robozonky.api.strategies.LoanDescriptor, ===java.util.function.Supplier<com.github.robozonky.api.strategies.PortfolioOverview>===, com.github.robozonky.api.SessionInfo)",
        "justification": "Strategy interface is simplified for increased RoboZonky performance."
      },
      {
        "code": "java.method.returnTypeChanged",
        "old": "method java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedLoan> com.github.robozonky.api.strategies.InvestmentStrategy::recommend(java.util.Collection<com.github.robozonky.api.strategies.LoanDescriptor>, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "method java.util.Optional<com.github.robozonky.api.Money> com.github.robozonky.api.strategies.InvestmentStrategy::recommend(com.github.robozonky.api.strategies.LoanDescriptor, java.util.function.Supplier<com.github.robozonky.api.strategies.PortfolioOverview>, com.github.robozonky.api.SessionInfo)",
        "justification": "Strategy interface is simplified for increased RoboZonky performance."
      },
      {
        "code": "java.method.parameterTypeChanged",
        "old": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedParticipation> com.github.robozonky.api.strategies.PurchaseStrategy::recommend(===java.util.Collection<com.github.robozonky.api.strategies.ParticipationDescriptor>===, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "parameter boolean com.github.robozonky.api.strategies.PurchaseStrategy::recommend(===com.github.robozonky.api.strategies.ParticipationDescriptor===, java.util.function.Supplier<com.github.robozonky.api.strategies.PortfolioOverview>, com.github.robozonky.api.SessionInfo)",
        "justification": "Strategy interface is simplified for increased RoboZonky performance."
      },
      {
        "code": "java.method.parameterTypeChanged",
        "old": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedParticipation> com.github.robozonky.api.strategies.PurchaseStrategy::recommend(java.util.Collection<com.github.robozonky.api.strategies.ParticipationDescriptor>, ===com.github.robozonky.api.strategies.PortfolioOverview===, com.github.robozonky.api.SessionInfo)",
        "new": "parameter boolean com.github.robozonky.api.strategies.PurchaseStrategy::recommend(com.github.robozonky.api.strategies.ParticipationDescriptor, ===java.util.function.Supplier<com.github.robozonky.api.strategies.PortfolioOverview>===, com.github.robozonky.api.SessionInfo)",
        "justification": "Strategy interface is simplified for increased RoboZonky performance."
      },
      {
        "code": "java.method.returnTypeChanged",
        "old": "method java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedParticipation> com.github.robozonky.api.strategies.PurchaseStrategy::recommend(java.util.Collection<com.github.robozonky.api.strategies.ParticipationDescriptor>, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "method boolean com.github.robozonky.api.strategies.PurchaseStrategy::recommend(com.github.robozonky.api.strategies.ParticipationDescriptor, java.util.function.Supplier<com.github.robozonky.api.strategies.PortfolioOverview>, com.github.robozonky.api.SessionInfo)",
        "justification": "Strategy interface is simplified for increased RoboZonky performance."
      },
      {
        "code": "java.method.parameterTypeChanged",
        "old": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedReservation> com.github.robozonky.api.strategies.ReservationStrategy::recommend(===java.util.Collection<com.github.robozonky.api.strategies.ReservationDescriptor>===, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "parameter boolean com.github.robozonky.api.strategies.ReservationStrategy::recommend(===com.github.robozonky.api.strategies.ReservationDescriptor===, java.util.function.Supplier<com.github.robozonky.api.strategies.PortfolioOverview>, com.github.robozonky.api.SessionInfo)",
        "justification": "Strategy interface is simplified for increased RoboZonky performance."
      },
      {
        "code": "java.method.parameterTypeChanged",
        "old": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedReservation> com.github.robozonky.api.strategies.ReservationStrategy::recommend(java.util.Collection<com.github.robozonky.api.strategies.ReservationDescriptor>, ===com.github.robozonky.api.strategies.PortfolioOverview===, com.github.robozonky.api.SessionInfo)",
        "new": "parameter boolean com.github.robozonky.api.strategies.ReservationStrategy::recommend(com.github.robozonky.api.strategies.ReservationDescriptor, ===java.util.function.Supplier<com.github.robozonky.api.strategies.PortfolioOverview>===, com.github.robozonky.api.SessionInfo)",
        "justification": "Strategy interface is simplified for increased RoboZonky performance."
      },
      {
        "code": "java.method.returnTypeChanged",
        "old": "method java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedReservation> com.github.robozonky.api.strategies.ReservationStrategy::recommend(java.util.Collection<com.github.robozonky.api.strategies.ReservationDescriptor>, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "method boolean com.github.robozonky.api.strategies.ReservationStrategy::recommend(com.github.robozonky.api.strategies.ReservationDescriptor, java.util.function.Supplier<com.github.robozonky.api.strategies.PortfolioOverview>, com.github.robozonky.api.SessionInfo)",
        "justification": "Strategy interface is simplified for increased RoboZonky performance."
      },
      {
        "code": "java.method.parameterTypeChanged",
        "old": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedInvestment> com.github.robozonky.api.strategies.SellStrategy::recommend(===java.util.Collection<com.github.robozonky.api.strategies.InvestmentDescriptor>===, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "parameter boolean com.github.robozonky.api.strategies.SellStrategy::recommend(===com.github.robozonky.api.strategies.InvestmentDescriptor===, java.util.function.Supplier<com.github.robozonky.api.strategies.PortfolioOverview>, com.github.robozonky.api.SessionInfo)",
        "justification": "Strategy interface is simplified for increased RoboZonky performance."
      },
      {
        "code": "java.method.parameterTypeChanged",
        "old": "parameter java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedInvestment> com.github.robozonky.api.strategies.SellStrategy::recommend(java.util.Collection<com.github.robozonky.api.strategies.InvestmentDescriptor>, ===com.github.robozonky.api.strategies.PortfolioOverview===, com.github.robozonky.api.SessionInfo)",
        "new": "parameter boolean com.github.robozonky.api.strategies.SellStrategy::recommend(com.github.robozonky.api.strategies.InvestmentDescriptor, ===java.util.function.Supplier<com.github.robozonky.api.strategies.PortfolioOverview>===, com.github.robozonky.api.SessionInfo)",
        "justification": "Strategy interface is simplified for increased RoboZonky performance."
      },
      {
        "code": "java.method.returnTypeChanged",
        "old": "method java.util.stream.Stream<com.github.robozonky.api.strategies.RecommendedInvestment> com.github.robozonky.api.strategies.SellStrategy::recommend(java.util.Collection<com.github.robozonky.api.strategies.InvestmentDescriptor>, com.github.robozonky.api.strategies.PortfolioOverview, com.github.robozonky.api.SessionInfo)",
        "new": "method boolean com.github.robozonky.api.strategies.SellStrategy::recommend(com.github.robozonky.api.strategies.InvestmentDescriptor, java.util.function.Supplier<com.github.robozonky.api.strategies.PortfolioOverview>, com.github.robozonky.api.SessionInfo)",
        "justification": "Strategy interface is simplified for increased RoboZonky performance."
      }
    ]
  }
}
