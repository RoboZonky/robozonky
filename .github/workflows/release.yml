name: Release

on: [pull_request]

env:
  JDK_VERSION: 14
  JLINK_SCRIPT_FILENAME: ".github/workflows/jlink.sh"
  PRENATIVE_REPO_FILENAME: "robozonky-build-prenative.zip"

defaults:
  run:
    shell: bash

jobs:
  build_project:
    name: Build the project
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Install Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_VERSION }}
      - name: Run the build
        run: mvn clean install --batch-mode -DskipTests
      - name: Share the build directory # So that all subsequent steps use identical binaries.
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PRENATIVE_REPO_FILENAME }}
          path: '**/*'
  jlink1:
    name: JLink the Main app and CLI binaries
    needs: build_project
    strategy:
      fail-fast: false # Always see all results on all platforms.
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download the build directory
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.PRENATIVE_REPO_FILENAME }}
      - name: Install Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_VERSION }}
      - name: Determine RoboZonky version
        run: |
          ROBOZONKY_VERSION=$(mvn -q \
            -Dexec.executable="echo" \
            -Dexec.args='${project.version}' \
            --non-recursive \
            org.codehaus.mojo:exec-maven-plugin:1.6.0:exec \
          )
          echo "The detected RoboZonky version is $ROBOZONKY_VERSION"
          echo "::set-env name=ROBOZONKY_VERSION::$ROBOZONKY_VERSION"
      # Avoid proliferation of Ubuntu and remove the -latest suffix.
      - name: This is Mac OS X
        if: startsWith(matrix.os, 'macos')
        run: |
          echo "::set-env name=ROBOZONKY_OS::macos"
      - name: This is Windows
        if: startsWith(matrix.os, 'windows')
        run: |
          echo "::set-env name=ROBOZONKY_OS::windows"
      - name: This is Linux
        if: !startsWith(matrix.os, 'windows') && !startsWith(matrix.os, 'macos')
        run: |
          echo "::set-env name=ROBOZONKY_OS::linux"
      # Build and publish the JLinked JREs.
      - name: Run JLink for the JARs
        run: |
          chmod +x ${{ env.JLINK_SCRIPT_FILENAME }}
          ./${{ env.JLINK_SCRIPT_FILENAME }} robozonky-app/target/robozonky-app-$ROBOZONKY_VERSION-full.jar ${{ github.workspace }}/app/jre
          zip -r ${{ github.workspace }}/robozonky-app-jre-$ROBOZONKY_OS.zip ${{ github.workspace }}/app/jre
          ./${{ env.JLINK_SCRIPT_FILENAME }} robozonky-cli/target/robozonky-cli-$ROBOZONKY_VERSION-full.jar ${{ github.workspace }}/cli/jre
          zip -r ${{ github.workspace }}/robozonky-cli-jre-$ROBOZONKY_OS.zip ${{ github.workspace }}/cli/jre
      - name: Upload JLinked JREs
        uses: actions/upload-artifact@v2
        with:
          name: robozonky-jre-$ROBOZONKY_OS
          path: ${{ github.workspace }}/robozonky-*jre*.zip
  distributions1:
    name: Prepare distribution archives for Main daemon and CLI
    needs: jlink1
    runs-on: ubuntu-latest
    steps:
      - name: Download the build directory
        uses: actions/download-artifact@v2
        with:
          name: robozonky-build.zip
          path: ${{ github.workspace }}/.
      - name: Unzip the build directory
        run:
          unzip ${{ github.workspace }}/${{ env.PRENATIVE_REPO_FILENAME }} .
      - name: Install Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_VERSION }}
      - name: Download Linux JREs
        uses: actions/download-artifact@v2
        with:
          name: robozonky-jre-linux
          path: robozonky-distributions/robozonky-distributions-full/target/
      - name: Download MacOS JREs
        uses: actions/download-artifact@v2
        with:
          name: robozonky-jre-macos
          path: robozonky-distributions/robozonky-distributions-full/target/
      - name: Download Windows JREs
        uses: actions/download-artifact@v2
        with:
          name: robozonky-jre-windows
          path: robozonky-distributions/robozonky-distributions-full/target/

#jobs:
#  release:
#    name: Release
#    strategy:
#      fail-fast: false # Always see all results on all platforms.
#      matrix:
#        os: [ubuntu-latest, windows-latest, macos-latest]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - name: Deploy Maven package
#        uses: samuelmeuli/action-maven-publish@v1
#        with:
#          maven_args: "-DskipTests"
#          maven_profiles: release
#          maven_goals_phases: deploy
#          gpg_private_key: ${{ secrets.MAVEN_CENTRAL_PRIVATE_KEY }}
#          gpg_passphrase: ${{ secrets.MAVEN_CENTRAL_PRIVATE_KEY_PASSWORD }}
#          server_id: ossrh
#          nexus_username: ${{ secrets.MAVEN_CENTRAL_ACCOUNT_NAME }}
#          nexus_password: ${{ secrets.MAVEN_CENTRAL_ACCOUNT_PASSWORD }}
