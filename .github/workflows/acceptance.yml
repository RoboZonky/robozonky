name: Acceptance

on: [pull_request]

env:
  DEFAULT_JDK_VERSION: 11
  STABILIZING_PROPERTIES: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false
  STREAMLINING_PROPERTIES: ${{ env.STABILIZING_PROPERTIES}} -Dassembly.skipAssembly -Denforcer.skip
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

defaults:
  run:
    shell: bash

jobs:
  full:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout from Github
        uses: actions/checkout@v1
      - name: Set up the JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.DEFAULT_JDK_VERSION }}
      - name: Compile all modules without testing
        run: mvn --batch-mode clean install -DskipTests ${{ env.STABILIZING_PROPERTIES }}
      - name: Test all modules inc. JaCoCo
        run: mvn --batch-mode org.jacoco:jacoco-maven-plugin:prepare-agent install org.jacoco:jacoco-maven-plugin:report -Dpit.skip=true ${{ env.STREAMLINING_PROPERTIES }}
      - name: Trigger SonarCloud
        run: mvn sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=robozonky -Dsonar.projectKey=com.github.robozonky:robozonky -Dsonar.java.source=${{ env.DEFAULT_JDK_VERSION }} ${{ env.STABILIZING_PROPERTIES }}
  mutation: # Takes a very long time, run all modules in parallel.
    name: Mutation coverage
    needs: full
    strategy:
      fail-fast: false # Always see all results
      matrix:
        module: [robozonky-api, robozonky-app, robozonky-notifications, robozonky-strategy-natural, robozonky-cli, robozonky-installer]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout from Github
        uses: actions/checkout@v1
      - name: Set up the JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.DEFAULT_JDK_VERSION }}
      - name: Compile all modules without testing
        run: mvn --batch-mode clean install -DskipTests ${{ env.STREAMLINING_PROPERTIES }}
      - name: Run mutation coverage on a single module
        run: |
          cd ${{ matrix.module }}
          mvn --batch-mode install ${{ env.STREAMLINING_PROPERTIES }}
  quick:
    name: Cross-platform sanity check
    strategy:
      fail-fast: false # Always see all results on all platforms.
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        jvm: [11, 14]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout from Github
        uses: actions/checkout@v1
      - name: Set up the JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jvm }}
      - name: Compile and test all modules, skipping mutation coverage
        run: mvn --batch-mode verify -Dpit.skip=true ${{ env.STREAMLINING_PROPERTIES }}
